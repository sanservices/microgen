pipeline {
    agent {
        label 'dind-agent'
    }
    stages {
        stage('Build Docker Image for develop') {
            when {
                branch 'develop'
            }
            steps {
                script {
                    app_image = docker.build("sslibs/{{ cookiecutter.app_name }}-tst")
                }
            }
        }
        stage ('Push Docker Image for develop') {
            when {
                branch 'develop'
            }
            steps {
                script {
                    docker.withRegistry('https://registry.hub.docker.com', 'dockerhub_ss_dbarahona') {
                        app_image.push("${env.GIT_COMMIT[0..7]}")
                        app_image.push("latest")
                    }
                }
            }
        }
        stage ('Security and Policy Scan of develop image') {
            when {
                branch 'develop'
            }
            steps {
                sh 'echo "sslibs/{{ cookiecutter.app_name }}-tst:latest ${WORKSPACE}/Dockerfile" > anchore_images'
                anchore autoSubscribeTagUpdates: false, forceAnalyze: true, name: 'anchore_images'
            }
        }
        stage ('Deploy to swarm testing via webhook to develop') {
            when {
                branch 'develop'
            }
            steps {
                httpRequest(url: 'http://172.16.17.121:9000/api/webhooks/06d62373-b005-4698-9102-1b28b4fa4e0d',
                httpMode: 'POST',
                validResponseCodes: '204')
            }
        }

        stage('Build Docker Image for prod') {
            when { tag "v*" }
            steps {
                script {
                    app_image = docker.build("sslibs/{{ cookiecutter.app_name }}-tst")
                }
            }
        }
        stage ('Push Docker Image for prod') {
            when { tag "v*" }
            steps {
                script {
                    docker.withRegistry('https://registry.hub.docker.com', 'dockerhub_ss_dbarahona') {
                        app_image.push("${env.GIT_COMMIT[0..7]}")
                        app_image.push("latest")
                    }
                }
            }
        }
        stage ('Security and Policy Scan of prod image') {
            when { tag "v*" }
            steps {
                sh 'echo "sslibs/{{ cookiecutter.app_name }}-tst:latest ${WORKSPACE}/Dockerfile" > anchore_images'
                anchore autoSubscribeTagUpdates: false, forceAnalyze: true, name: 'anchore_images'
            }
        }
        stage ('Deploy to swarm testing via webhook to prod') {
            when { tag "v*" }
            steps {
                httpRequest(url: 'http://172.16.17.121:9000/api/webhooks/06d62373-b005-4698-9102-1b28b4fa4e0d',
                httpMode: 'POST',
                validResponseCodes: '204')
            }
        }
    }
}